/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{disposeMaybe as t}from"../../../../core/maybe.js";import{t as s}from"../../../../chunks/common.js";import{k as i,c as e,r,h as o}from"../../../../chunks/mat3.js";import{c as a}from"../../../../chunks/mat3f32.js";import{f as n}from"../../../../chunks/vec2f64.js";import{s as c}from"../../../../chunks/vec3.js";import{c as h}from"../../../../chunks/vec3f64.js";import m from"./VertexStream.js";import{stencil as l}from"./shaders/StencilPrograms.js";import{CompareFunction as d,StencilOperation as _}from"../../../webgl/enums.js";import{createProgram as p}from"../../../webgl/ProgramTemplate.js";const u=n(-.5,-.5);class f{constructor(){this._centerNdc=h(),this._pxToNdc=h(),this._worldDimensionsPx=h(),this._mat3=a(),this._initialized=!1}dispose(){this._program=t(this._program),this._quad=t(this._quad)}render(t,s,i){const{context:e}=t,r=this._updateGeometry(t,i);if(null!=s){const{r:t,g:i,b:r,a:o}=s;e.setClearColor(o*t/255,o*i/255,o*r/255,o)}else e.setClearColor(0,0,0,0);if(e.setStencilFunction(d.ALWAYS,0,255),e.setStencilWriteMask(255),!r)return e.setClearStencil(1),void e.clear(e.gl.STENCIL_BUFFER_BIT);e.setClearStencil(0),e.clear(e.gl.STENCIL_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),this._initialized||this._initialize(e),e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setBlendingEnabled(!1),e.setStencilOp(_.KEEP,_.KEEP,_.REPLACE),e.setStencilFunction(d.ALWAYS,1,255),e.setStencilTestEnabled(!0),e.useProgram(this._program),this._program.setUniformMatrix3fv("u_worldExtent",this._mat3),this._quad.draw(),this._quad.unbind()}_initialize(t){if(this._initialized)return;const s=p(t,l);s&&(this._program=s,this._quad=new m(t,[0,0,1,0,0,1,1,1]),this._initialized=!0)}_updateGeometry(t,a){const{state:n,pixelRatio:h}=t,{size:m,rotation:l}=n,d=Math.round(m[0]*h),_=Math.round(m[1]*h);if(!n.spatialReference.isWrappable)return!1;const p=s(l),f=Math.abs(Math.cos(p)),g=Math.abs(Math.sin(p)),E=Math.round(d*f+_*g),S=Math.round(n.worldScreenWidth);if(E<=S)return!1;const b=d*g+_*f,x=S*h,j=(a.left-a.right)*h/d,C=(a.bottom-a.top)*h/_;c(this._worldDimensionsPx,x,b,1),c(this._pxToNdc,2/d,-2/_,1),c(this._centerNdc,j,C,1);const M=this._mat3;return i(M,this._centerNdc),e(M,M,this._pxToNdc),0!==l&&r(M,M,p),e(M,M,this._worldDimensionsPx),o(M,M,u),!0}}export{f as WorldExtentRenderer};
