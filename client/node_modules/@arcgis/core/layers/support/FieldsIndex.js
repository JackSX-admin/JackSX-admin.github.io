/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{isSerializable as i}from"../../core/JSONSupport.js";import t from"../../core/Logger.js";import{isDateField as s,isNumericField as n,isObjectIDField as l,isGlobalIDField as r,getFieldDefaultValue as d,isTimeOnlyField as o,normalizeFieldName as a}from"./fieldUtils.js";import{utc as m,unknown as u,fromTimeReference as f}from"../../time/timeZoneUtils.js";function F(e){return"timeZone"in e}function h(e){return"timeZone"in e}function p(e){return"dateFieldsTimeZone"in e}class c{static fromJSON(e){return new c(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new c(e.fields??[],T(e))}static fromLayerJSON(e){return new c(e.fields??[],T(e))}constructor(e=[],i){this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=i?new Map(i):null;const t=[];for(const d of this.fields){const e=d?.name,i=_(e);if(e&&i){const o=y(e);this._fieldsMap.set(e,d),this._fieldsMap.set(o,d),this._normalizedFieldsMap.set(i,d),t.push(`${o}:${d.type}:${this._timeZoneByFieldName?.get(e)}`),s(d)?(this.dateFields.push(d),this._dateFieldsSet.add(d)):n(d)&&(this._numericFieldsSet.add(d),this.numericFields.push(d)),l(d)||r(d)||(d.editable=null==d.editable||!!d.editable,d.nullable=null==d.nullable||!!d.nullable)}}t.sort(),this.uid=t.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)l(e)||r(e)||e.nullable||void 0!==d(e)||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===e?.uid}has(e){return null!=this.get(e)}get(e){if(!e)return;let i=this._fieldsMap.get(e);return i||(i=this._fieldsMap.get(y(e))??this._normalizedFieldsMap.get(_(e)),i&&this._fieldsMap.set(e,i),i)}getTimeZone(i){const s=this.get(i&&"string"!=typeof i?i.name:i);return s?this._timeZoneByFieldName?this._timeZoneByFieldName.get(s.name):"date"===s.type||"esriFieldTypeDate"===s.type?(t.getLogger("esri.layers.support.FieldsIndex").error(new e("getTimeZone:no-timezone-information",`no time zone information for field '${s.name}'`)),m):g.has(s.type)?u:null:null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return o(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){return this.get(e)?.name??void 0}toJSON(){return{fields:this.fields.map((e=>i(e)?e.toJSON():e)),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function y(e){return e.trim().toLowerCase()}function _(e){return a(e)?.toLowerCase()??""}const g=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function T(e){const i=new Map;if(!e.fields)return i;const t=!0===e.datesInUnknownTimezone,{timeInfo:s,editFieldsInfo:n}=e,l=(s?"startField"in s?s.startField:s.startTimeField:"")??"",r=(s?"endField"in s?s.endField:s.endTimeField:"")??"",d=p(e)?e.dateFieldsTimeZone??null:e.dateFieldsTimeReference?f(e.dateFieldsTimeReference):null,o=n?F(n)?n.timeZone??d:n.dateFieldsTimeReference?f(n.dateFieldsTimeReference):d??m:null,a=s?h(s)?s.timeZone??d:s.timeReference?f(s.timeReference):d:null,c=new Map([[y(n?.creationDateField??""),o],[y(n?.editDateField??""),o],[y(l),a],[y(r),a]]);for(const{name:m,type:f}of e.fields)if(g.has(f))i.set(m,u);else if("date"!==f&&"esriFieldTypeDate"!==f)i.set(m,null);else if(t)i.set(m,u);else{const e=c.get(y(m??""))??d;i.set(m,e)}return i}export{c as default};
